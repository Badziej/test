blueprint:
  name: Suszarka - koniec cyklu (zaawansowana)
  description: >
    Powiadomienie o zakończeniu cyklu suszarki — tylko jeśli wcześniej była aktywna.
  domain: automation
  input:
    power_sensor:
      name: Czujnik zużycia prądu
      description: Sensor mocy suszarki (np. `sensor.suszarka_power`)
      selector:
        entity:
          domain: sensor
          device_class: power
    high_power_threshold:
      name: Próg "włączonej" suszarki (W)
      default: 30
      selector:
        number:
          min: 5
          max: 500
          unit_of_measurement: W
    low_power_threshold:
      name: Próg "wyłączonej" suszarki (W)
      default: 3
      selector:
        number:
          min: 0
          max: 10
          unit_of_measurement: W
    low_power_duration:
      name: Czas trwania niskiego zużycia (w minutach)
      default: 3
      selector:
        number:
          min: 1
          max: 30
          unit_of_measurement: min
    notify_device:
      name: Urządzenie do powiadomienia
      selector:
        device:
          integration: mobile_app
    message:
      name: Wiadomość powiadomienia
      default: Suszarka - koniec cyklu
      selector:
        text:

variables:
  high_threshold: !input high_power_threshold
  low_threshold: !input low_power_threshold

trigger:
  - platform: numeric_state
    entity_id: !input power_sensor
    below: !input low_power_threshold
    for:
      minutes: !input low_power_duration

condition:
  - condition: template
    value_template: >
      {{ state_attr(this.entity_id, 'last_triggered') is none or
         (as_timestamp(now()) - as_timestamp(state_attr(this.entity_id, 'last_triggered'))) > 60 }}

  - condition: template
    value_template: >
      {% set power = namespace(ran=false) %}
      {% for s in states('sensor.' + (input.power_sensor | regex_replace('^sensor\\.', ''))) | default([]) %}
        {% if s | float(default=0) > high_threshold %}
          {% set power.ran = true %}
        {% endif %}
      {% endfor %}
      {{ power.ran }}

action:
  - service: notify.mobile_app_{{ device_attr(notify_device, 'name') | lower | replace(" ", "_") }}
    data:
      message: !input message

mode: single
